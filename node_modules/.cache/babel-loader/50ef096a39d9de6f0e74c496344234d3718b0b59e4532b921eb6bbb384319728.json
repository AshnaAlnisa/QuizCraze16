{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Quiz\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../styles/modal.css';\nimport { Link } from 'react-router-dom';\nimport QuizList from './QuizList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  correctAnswers,\n  incorrectAnswers,\n  score,\n  userId,\n  quizCardId\n}) => {\n  _s();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const handleInsertResult = async () => {\n    setIsSubmitting(true);\n    try {\n      const response = await axios.post('http://localhost:5164/insertResult', {\n        eventID: \"1001\",\n        addInfo: {\n          user_id: userId,\n          quiz_card_id: quizCardId,\n          correct_answer: correctAnswers,\n          incorrect_answer: incorrectAnswers,\n          score: score * 10\n        }\n      });\n      console.log(\"Response from insertResult API:\", response);\n      const data = response.data;\n      if (data && data.rData && data.rMessage === \"Successful\") {\n        console.log(\"Result inserted successfully\");\n      } else {\n        console.log(\"Failed to insert result:\", data);\n        setSubmitError(\"Failed to insert result\");\n      }\n    } catch (error) {\n      console.error('Error inserting result:', error);\n      setSubmitError(\"Failed to insert result\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleCloseModal = () => {\n    handleInsertResult(); // Insert result before closing\n    onClose();\n    // onClose(); // Close the modal after inserting result\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Incorrect Answers: \", incorrectAnswers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score * 10]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        disabled: isSubmitting,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"qgGD8t7RiRP6f9ZXXHiTbsqeAA0=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","axios","Link","QuizList","jsxDEV","_jsxDEV","Modal","isOpen","onClose","correctAnswers","incorrectAnswers","score","userId","quizCardId","_s","isSubmitting","setIsSubmitting","submitError","setSubmitError","handleInsertResult","response","post","eventID","addInfo","user_id","quiz_card_id","correct_answer","incorrect_answer","console","log","data","rData","rMessage","error","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Quiz/Modal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../styles/modal.css';\r\nimport { Link } from 'react-router-dom';\r\nimport QuizList from './QuizList';\r\n\r\nconst Modal = ({ isOpen, onClose, correctAnswers, incorrectAnswers, score, userId, quizCardId }) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState(null);\r\n\r\n  const handleInsertResult = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5164/insertResult', {\r\n        eventID: \"1001\",\r\n        addInfo: {\r\n          user_id: userId,\r\n          quiz_card_id: quizCardId,\r\n          correct_answer: correctAnswers,\r\n          incorrect_answer: incorrectAnswers,\r\n          score: score*10\r\n        }\r\n      });\r\n\r\n      console.log(\"Response from insertResult API:\", response);\r\n\r\n      const data = response.data;\r\n      if (data && data.rData && data.rMessage === \"Successful\") {\r\n        console.log(\"Result inserted successfully\");\r\n      } else {\r\n        console.log(\"Failed to insert result:\", data);\r\n        setSubmitError(\"Failed to insert result\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error inserting result:', error);\r\n      setSubmitError(\"Failed to insert result\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    handleInsertResult(); // Insert result before closing\r\n    onClose();\r\n    // onClose(); // Close the modal after inserting result\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Quiz Results</h2>\r\n        <p>Correct Answers: {correctAnswers}</p>\r\n        <p>Incorrect Answers: {incorrectAnswers}</p>\r\n        <p>Your Score: {score*10}</p>\r\n        {/* {submitError && <p className=\"error-message\">{submitError}</p>} */}\r\n        <button onClick={handleCloseModal} disabled={isSubmitting}>Close</button>\r\n  \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}