{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\Quiz App\\\\Frontend\\\\QuizCraze16\\\\src\\\\components\\\\Admin\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/analytics.css';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Analytics = () => {\n  _s();\n  const [quizPerformance, setQuizPerformance] = useState([]);\n  const [userActivity, setUserActivity] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAnalyticsData = async () => {\n      try {\n        const [quizPerformanceResponse, userActivityResponse] = await Promise.all([axios.post('http://localhost:5164/viewQuizPerformance', {\n          eventID: \"1001\"\n        }), axios.post('http://localhost:5164/viewUserActivity', {\n          eventID: \"1001\"\n        })]);\n        if (quizPerformanceResponse.data.rData && quizPerformanceResponse.data.rData.items) {\n          setQuizPerformance(quizPerformanceResponse.data.rData.items);\n        }\n        if (userActivityResponse.data.rData && userActivityResponse.data.rData.items) {\n          setUserActivity(userActivityResponse.data.rData.items);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n        setLoading(false);\n      }\n    };\n    fetchAnalyticsData();\n  }, []);\n\n  // Prepare data for charts\n  const quizPerformanceData = {\n    labels: quizPerformance.map(quiz => quiz.quiz_title),\n    datasets: [{\n      label: 'Total plays of the quiz',\n      data: quizPerformance.map(quiz => quiz.times_played),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const userActivityData = {\n    labels: userActivity.map(user => user.username),\n    datasets: [{\n      label: 'Total Quizzes Taken',\n      data: userActivity.map(user => user.total_quizzes_taken),\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\n      borderColor: 'rgba(153, 102, 255, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quiz Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: quizPerformanceData,\n          options: {\n            responsive: true,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Quiz Performance'\n              },\n              legend: {\n                position: 'top'\n              }\n            },\n            scales: {\n              x: {\n                beginAtZero: true\n              },\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: userActivityData,\n          options: {\n            responsive: true,\n            plugins: {\n              title: {\n                display: true,\n                text: 'User Activity'\n              },\n              legend: {\n                position: 'top'\n              }\n            },\n            scales: {\n              x: {\n                beginAtZero: true\n              },\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"vtrt0DuxMG65ybaDUvw1PtZApXc=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Analytics","_s","quizPerformance","setQuizPerformance","userActivity","setUserActivity","loading","setLoading","fetchAnalyticsData","quizPerformanceResponse","userActivityResponse","Promise","all","post","eventID","data","rData","items","error","console","quizPerformanceData","labels","map","quiz","quiz_title","datasets","label","times_played","backgroundColor","borderColor","borderWidth","userActivityData","user","username","total_quizzes_taken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","title","display","text","legend","position","scales","x","beginAtZero","y","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/Quiz App/Frontend/QuizCraze16/src/components/Admin/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/analytics.css';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register necessary components for Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Analytics = () => {\r\n  const [quizPerformance, setQuizPerformance] = useState([]);\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAnalyticsData = async () => {\r\n      try {\r\n        const [quizPerformanceResponse, userActivityResponse] = await Promise.all([\r\n          axios.post('http://localhost:5164/viewQuizPerformance', { eventID: \"1001\" }),\r\n          axios.post('http://localhost:5164/viewUserActivity', { eventID: \"1001\" })\r\n        ]);\r\n\r\n        if (quizPerformanceResponse.data.rData && quizPerformanceResponse.data.rData.items) {\r\n          setQuizPerformance(quizPerformanceResponse.data.rData.items);\r\n        }\r\n\r\n        if (userActivityResponse.data.rData && userActivityResponse.data.rData.items) {\r\n          setUserActivity(userActivityResponse.data.rData.items);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching analytics data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAnalyticsData();\r\n  }, []);\r\n\r\n  // Prepare data for charts\r\n  const quizPerformanceData = {\r\n    labels: quizPerformance.map(quiz => quiz.quiz_title),\r\n    datasets: [{\r\n      label: 'Total plays of the quiz',\r\n      data: quizPerformance.map(quiz => quiz.times_played),\r\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n      borderColor: 'rgba(75, 192, 192, 1)',\r\n      borderWidth: 1,\r\n    }],\r\n  };\r\n\r\n  const userActivityData = {\r\n    labels: userActivity.map(user => user.username),\r\n    datasets: [{\r\n      label: 'Total Quizzes Taken',\r\n      data: userActivity.map(user => user.total_quizzes_taken),\r\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n      borderColor: 'rgba(153, 102, 255, 1)',\r\n      borderWidth: 1,\r\n    }],\r\n  };\r\n\r\n  return (\r\n    <div className=\"analytics-container\">\r\n      <h2>Analytics</h2>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <section>\r\n            <h3>Quiz Performance</h3>\r\n            <Bar data={quizPerformanceData} options={{\r\n              responsive: true,\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Quiz Performance'\r\n                },\r\n                legend: {\r\n                  position: 'top',\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  beginAtZero: true,\r\n                },\r\n                y: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            }} />\r\n          </section>\r\n\r\n          <section>\r\n            <h3>User Activity</h3>\r\n            <Bar data={userActivityData} options={{\r\n              responsive: true,\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'User Activity'\r\n                },\r\n                legend: {\r\n                  position: 'top',\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  beginAtZero: true,\r\n                },\r\n                y: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            }} />\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}