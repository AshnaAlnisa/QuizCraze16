{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\Quiz App\\\\Frontend\\\\QuizCraze16\\\\src\\\\components\\\\Auth\\\\RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // New state for confirm password\n  const [captcha, setCaptcha] = useState('');\n  const [error, setError] = useState(''); // New state for error messages\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return; // Prevent form submission if passwords do not match\n    }\n    setError(''); // Clear previous errors\n\n    const payload = {\n      eventID: \"1001\",\n      addInfo: {\n        username: username,\n        email: email,\n        password: password,\n        captcha: captcha\n      }\n    };\n    try {\n      // Make POST request to register endpoint\n      const response = await axios.post('http://localhost:5001/register', payload);\n      console.log('Registration Response:', response.data);\n\n      // Handle response based on API result\n      if (response.data.rData.rMessage === 'Signup Successful') {\n        localStorage.setItem('currentUser', JSON.stringify({\n          username,\n          email\n        }));\n        navigate('/login'); // Redirect to login page after successful registration\n      } else {\n        alert(response.data.rData.rMessage); // Alert user about registration failure\n      }\n    } catch (error) {\n      console.error('Error registering user:', error);\n      alert('An error occurred. Please try again.'); // Alert user about generic error\n    }\n  };\n  const navigateLogin = () => {\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"captcha\",\n        children: \"Captcha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"captcha\",\n        value: captcha,\n        onChange: e => setCaptcha(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter \\\"1234\\\" as the captcha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Already have an account? Login here..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: navigateLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"NGjk1zUy5RPtePhZpBMaRlL0Jhs=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","RegisterForm","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","captcha","setCaptcha","error","setError","navigate","handleSubmit","e","preventDefault","payload","eventID","addInfo","response","post","console","log","data","rData","rMessage","localStorage","setItem","JSON","stringify","alert","navigateLogin","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/Quiz App/Frontend/QuizCraze16/src/components/Auth/RegistrationForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../../styles/styles.css';\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState(''); // New state for confirm password\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [error, setError] = useState(''); // New state for error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if passwords match\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return; // Prevent form submission if passwords do not match\r\n    }\r\n\r\n    setError(''); // Clear previous errors\r\n\r\n    const payload = {\r\n      eventID: \"1001\",\r\n      addInfo: {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        captcha: captcha\r\n      }\r\n    };\r\n\r\n    try {\r\n      // Make POST request to register endpoint\r\n      const response = await axios.post('http://localhost:5001/register', payload);\r\n\r\n      console.log('Registration Response:', response.data);\r\n\r\n      // Handle response based on API result\r\n      if (response.data.rData.rMessage === 'Signup Successful') {\r\n        localStorage.setItem('currentUser', JSON.stringify({ username, email }));\r\n\r\n        navigate('/login'); // Redirect to login page after successful registration\r\n      } else {\r\n        alert(response.data.rData.rMessage); // Alert user about registration failure\r\n      }\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n      alert('An error occurred. Please try again.'); // Alert user about generic error\r\n    }\r\n  };\r\n\r\n  const navigateLogin = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"captcha\">Captcha</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"captcha\"\r\n          value={captcha}\r\n          onChange={(e) => setCaptcha(e.target.value)}\r\n          required\r\n        />\r\n        <p>Enter \"1234\" as the captcha</p> {/* Simulated captcha for demo purposes */}\r\n      </div>\r\n      {error && <p className=\"error\">{error}</p>} {/* Display error message */}\r\n      <button type=\"submit\">Register</button>\r\n      <p>Already have an account? Login here..</p>\r\n      <button type=\"submit\" onClick={navigateLogin}>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}