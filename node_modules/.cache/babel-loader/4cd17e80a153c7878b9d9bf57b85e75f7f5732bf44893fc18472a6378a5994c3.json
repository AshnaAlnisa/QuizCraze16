{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\QuizCraze\\\\react-quiz-app-master\\\\src\\\\components\\\\Dashboard\\\\MyResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizResults = () => {\n  _s();\n  const [quizResults, setQuizResults] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const fetchQuizResults = async () => {\n      try {\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        const userEmail = currentUser === null || currentUser === void 0 ? void 0 : currentUser.email;\n        setUserEmail(userEmail); // Set userEmail state for later use\n\n        const response = await axios.post('http://localhost:5164/viewResult', {\n          email: userEmail\n        });\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData.rData && responseData.rData.items) {\n            setQuizResults(responseData.rData.items);\n            console.log(\"Quiz Results:\", responseData.rData.items);\n          } else {\n            console.log(\"No quiz results data in response\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching quiz results:\", error);\n      }\n    };\n    fetchQuizResults();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Quiz Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correct Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Incorrect Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: quizResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.quiz_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.correct_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.incorrect_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizResults, \"odDMRDKcrxm0vP05Gd9lT3Fx5H4=\");\n_c = QuizResults;\nexport default QuizResults;\nvar _c;\n$RefreshReg$(_c, \"QuizResults\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuizResults","_s","quizResults","setQuizResults","userEmail","setUserEmail","fetchQuizResults","currentUser","JSON","parse","localStorage","getItem","email","response","post","status","responseData","data","rData","items","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","quiz_name","correct_answer","incorrect_answer","score","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/QuizCraze/react-quiz-app-master/src/components/Dashboard/MyResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst QuizResults = () => {\n  const [quizResults, setQuizResults] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n\n  useEffect(() => {\n    const fetchQuizResults = async () => {\n      try {\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        const userEmail = currentUser?.email;\n        setUserEmail(userEmail); // Set userEmail state for later use\n\n        const response = await axios.post('http://localhost:5164/viewResult', {\n          email: userEmail\n        });\n\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData.rData && responseData.rData.items) {\n            setQuizResults(responseData.rData.items);\n            console.log(\"Quiz Results:\", responseData.rData.items);\n          } else {\n            console.log(\"No quiz results data in response\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching quiz results:\", error);\n      }\n    };\n\n    fetchQuizResults();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return (\n    <div>\n      <h2>My Quiz Results</h2>\n      <p>Email: {userEmail}</p>\n      <table>\n        <thead>\n          <tr>\n            <th>Quiz</th>\n            <th>Correct Answers</th>\n            <th>Incorrect Answers</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {quizResults.map((result, index) => (\n            <tr key={index}>\n              <td>{result.quiz_name}</td>\n              <td>{result.correct_answer}</td>\n              <td>{result.incorrect_answer}</td>\n              <td>{result.score}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QuizResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;QACnE,MAAMP,SAAS,GAAGG,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,KAAK;QACpCP,YAAY,CAACD,SAAS,CAAC,CAAC,CAAC;;QAEzB,MAAMS,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,kCAAkC,EAAE;UACpEF,KAAK,EAAER;QACT,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAI;UAClC,IAAID,YAAY,CAACE,KAAK,IAAIF,YAAY,CAACE,KAAK,CAACC,KAAK,EAAE;YAClDhB,cAAc,CAACa,YAAY,CAACE,KAAK,CAACC,KAAK,CAAC;YACxCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,YAAY,CAACE,KAAK,CAACC,KAAK,CAAC;UACxD,CAAC,MAAM;YACLC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;UACjD;QACF;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAAwB,QAAA,GAAG,SAAO,EAACnB,SAAS;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb5B,OAAA;YAAAwB,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB5B,OAAA;YAAAwB,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B5B,OAAA;YAAAwB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR5B,OAAA;QAAAwB,QAAA,EACGrB,WAAW,CAAC0B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC7B/B,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAKM,MAAM,CAACE;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3B5B,OAAA;YAAAwB,QAAA,EAAKM,MAAM,CAACG;UAAc;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChC5B,OAAA;YAAAwB,QAAA,EAAKM,MAAM,CAACI;UAAgB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClC5B,OAAA;YAAAwB,QAAA,EAAKM,MAAM,CAACK;UAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJhBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1DID,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA4DjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}