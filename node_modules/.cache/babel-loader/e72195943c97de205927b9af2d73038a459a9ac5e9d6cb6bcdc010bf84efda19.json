{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\Quiz Craze 24\\\\frontend\\\\QuizCraze16\\\\src\\\\components\\\\Auth\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import '../../styles/styles.css';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       eventID: \"1001\",\n//       addInfo: {\n//         email: email,\n//         password: password\n//       }\n//     };\n\n//     try {\n//       const response = await axios.post('http://localhost:5164/myLogin', payload);\n\n//       console.log('API Response:', response); // Log the entire response for debugging\n//       let res = response.data.rData.rMessage;\n//       if (res === \"Signin Successful\") {\n//         const token = response.data.rData.TOKEN;\n//         localStorage.setItem('currentUser', JSON.stringify({ token }));\n//         navigate('/dashboard');\n//       } else {\n//         alert(response.data.rData.rMessage);\n//         // Clear form inputs on incorrect login\n//         setEmail('');\n//         setPassword('');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"form\">\n//       <div className=\"form-group\">\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      eventID: \"1001\",\n      addInfo: {\n        email: email,\n        password: password\n      }\n    };\n    try {\n      const response = await axios.post('http://localhost:5164/myLogin', payload);\n      console.log('API Response:', response); // Log the entire response for debugging\n\n      let res = response.data.rData.rMessage;\n      if (res === \"Signin Successful\") {\n        const token = response.data.rData.TOKEN;\n        const userEmail = response.data.rData.email; // Adjust this according to actual response structure\n        const isAdmin = response.data.rData.isAdmin;\n        console.log('User Email:', userEmail); // Log the userEmail to verify\n\n        // Store token and userEmail in localStorage\n        localStorage.setItem('currentUser', JSON.stringify({\n          token,\n          email: userEmail,\n          isAdmin\n        }));\n        console.log('Stored in localStorage:', localStorage.getItem('currentUser')); // Verify what's stored\n        if (isAdmin) {\n          navigate('/admin');\n        } else {\n          navigate('/dashboard');\n        }\n      } else {\n        alert(response.data.rData.rMessage);\n        // Clear form inputs on incorrect login\n        setEmail('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  const navigateRegister = () => {\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigateRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","payload","eventID","addInfo","response","post","console","log","res","data","rData","rMessage","token","TOKEN","userEmail","isAdmin","localStorage","setItem","JSON","stringify","getItem","alert","error","navigateRegister","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/Quiz Craze 24/frontend/QuizCraze16/src/components/Auth/LoginForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import '../../styles/styles.css';\r\n\r\n// const LoginForm = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const payload = {\r\n//       eventID: \"1001\",\r\n//       addInfo: {\r\n//         email: email,\r\n//         password: password\r\n//       }\r\n//     };\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5164/myLogin', payload);\r\n\r\n//       console.log('API Response:', response); // Log the entire response for debugging\r\n//       let res = response.data.rData.rMessage;\r\n//       if (res === \"Signin Successful\") {\r\n//         const token = response.data.rData.TOKEN;\r\n//         localStorage.setItem('currentUser', JSON.stringify({ token }));\r\n//         navigate('/dashboard');\r\n//       } else {\r\n//         alert(response.data.rData.rMessage);\r\n//         // Clear form inputs on incorrect login\r\n//         setEmail('');\r\n//         setPassword('');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//       alert('An error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n  \r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className=\"form\">\r\n//       <div className=\"form-group\">\r\n//         <label htmlFor=\"email\">Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group\">\r\n//         <label htmlFor=\"password\">Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../../styles/styles.css';\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      eventID: \"1001\",\r\n      addInfo: {\r\n        email: email,\r\n        password: password\r\n      }\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5164/myLogin', payload);\r\n\r\n      console.log('API Response:', response); // Log the entire response for debugging\r\n\r\n      let res = response.data.rData.rMessage;\r\n      if (res === \"Signin Successful\") {\r\n        const token = response.data.rData.TOKEN;\r\n        const userEmail = response.data.rData.email; // Adjust this according to actual response structure\r\n        const isAdmin = response.data.rData.isAdmin;\r\n        console.log('User Email:', userEmail); // Log the userEmail to verify\r\n        \r\n        // Store token and userEmail in localStorage\r\n        localStorage.setItem('currentUser', JSON.stringify({ token, email: userEmail, isAdmin }));\r\n        \r\n        console.log('Stored in localStorage:', localStorage.getItem('currentUser')); // Verify what's stored\r\n        if(isAdmin) {\r\n          navigate('/admin');\r\n        }else{\r\n          navigate('/dashboard');\r\n        }\r\n        \r\n      } else {\r\n        alert(response.data.rData.rMessage);\r\n        // Clear form inputs on incorrect login\r\n        setEmail('');\r\n        setPassword('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  const navigateRegister = () => {\r\n    navigate('/register');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n      <button onClick={navigateRegister}>Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}