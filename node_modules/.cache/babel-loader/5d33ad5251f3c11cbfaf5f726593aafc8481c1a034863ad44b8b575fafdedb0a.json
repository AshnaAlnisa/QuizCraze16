{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCS\\\\Desktop\\\\22 july\\\\frontend\\\\QuizCraze16\\\\src\\\\components\\\\Quiz\\\\QuizList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../../styles/quizList.css';\nimport Modal from './Modal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizList = () => {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [timer, setTimer] = useState(5); // 120 seconds = 2 minutes\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    const fetchQuizCards = async () => {\n      try {\n        const response = await axios.post('http://localhost:5164/viewCardQuiz', {\n          eventID: \"1001\"\n        });\n        const data = response.data;\n        if (data && data.rData && data.rData.items) {\n          setQuizzes(data.rData.items);\n        }\n      } catch (error) {\n        console.error('Error fetching quiz cards:', error);\n      }\n    };\n    fetchQuizCards();\n  }, []);\n  const startTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setTimer(5); // Set initial timer value (in seconds)\n    timerRef.current = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          setTimeout(() => {\n            setShowModal(true); // Show modal when timer ends\n          }, 500); // Adjust delay if needed\n          handleSubmitQuiz(); // Optionally handle quiz submission\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleStartQuiz = async quizCardId => {\n    try {\n      const response = await axios.post(`http://localhost:5164/viewQuizByQuizCardId`, {\n        eventID: \"1001\",\n        addInfo: {\n          quiz_card_id: quizCardId\n        }\n      });\n      const data = response.data;\n      if (data && data.rData && data.rData.items) {\n        setSelectedQuiz({\n          id: quizCardId,\n          quizzes: data.rData.items\n        });\n        setSelectedOptions({});\n        setIsSubmitted(false); // Reset submission state\n        setScore(0); // Reset score\n        setShowModal(false); // Hide modal if open\n        setCorrectAnswers(0);\n        setIncorrectAnswers(0);\n        startTimer(); // Start the timer when starting a new quiz\n      }\n    } catch (error) {\n      console.error('Error fetching quizzes:', error);\n    }\n  };\n  const handleOptionSelect = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option\n    });\n    console.log(`Selected option for question ${questionId}: ${option}`);\n  };\n  const handleSubmitQuiz = () => {\n    if (selectedQuiz) {\n      let newScore = 0;\n      let correctCount = 0;\n      let incorrectCount = 0;\n      selectedQuiz.quizzes.forEach(question => {\n        if (selectedOptions[question.quiz_id] === question.correct_answer) {\n          newScore += 1;\n          correctCount += 1;\n        } else {\n          incorrectCount += 1;\n        }\n      });\n      setScore(newScore);\n      setCorrectAnswers(correctCount);\n      setIncorrectAnswers(incorrectCount);\n      setIsSubmitted(true);\n      setShowModal(true); // Show modal when quiz is submitted\n      clearInterval(timerRef.current); // Stop the timer\n    }\n  };\n  const [user, setUser] = useState({\n    user_id: '',\n    username: '',\n    name: '',\n    email: '',\n    address: '',\n    picture: null\n  });\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    try {\n      var _response$data$rData;\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      const userEmail = currentUser === null || currentUser === void 0 ? void 0 : currentUser.email;\n      const response = await axios.post('http://localhost:5164/viewUsers', {\n        eventID: \"1001\",\n        addInfo: {\n          email: userEmail\n        }\n      });\n      const userData = ((_response$data$rData = response.data.rData) === null || _response$data$rData === void 0 ? void 0 : _response$data$rData.items) || [];\n      const foundUser = userData.find(user => user.email === userEmail);\n      if (foundUser) {\n        setUser(foundUser);\n      } else {\n        console.error('User data does not match logged-in user');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  const renderQuizQuestions = quizCard => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quizCard.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quizCard.no_of_questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Timer: \", Math.floor(timer / 60), \":\", timer % 60 < 10 ? `0${timer % 60}` : timer % 60, \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizCard.quizzes.map(q => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [q.option1, q.option2, q.option3, q.option4].map((option, index) => {\n            let className = '';\n            if (isSubmitted) {\n              if (option === q.correct_answer) {\n                className = 'correct-option';\n              } else if (selectedOptions[q.quiz_id] === option) {\n                className = 'incorrect-option';\n              }\n            } else if (selectedOptions[q.quiz_id] === option) {\n              className = 'selected-option';\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: () => handleOptionSelect(q.quiz_id, option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, q.quiz_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitQuiz,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        clearInterval(timerRef.current); // Stop the timer when going back\n        setSelectedQuiz(null);\n      },\n      children: \"Back to Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Quizzes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), !selectedQuiz ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizzes.map(quizCard => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quizCard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Questions : \", quizCard.no_of_questions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStartQuiz(quizCard.quiz_card_id),\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)]\n      }, quizCard.quiz_card_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : renderQuizQuestions(selectedQuiz), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onClose: () => setShowModal(false),\n      correctAnswers: correctAnswers,\n      incorrectAnswers: incorrectAnswers,\n      score: score,\n      userId: user.user_id,\n      quizCardId: selectedQuiz ? selectedQuiz.id : null,\n      handleSubmit: handleSubmitQuiz // Pass handleSubmitQuiz to Modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizList, \"pRspE6tyyvaxCcbeo0bM6kmhqTk=\");\n_c = QuizList;\nexport default QuizList;\nvar _c;\n$RefreshReg$(_c, \"QuizList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Modal","jsxDEV","_jsxDEV","QuizList","_s","quizzes","setQuizzes","selectedQuiz","setSelectedQuiz","selectedOptions","setSelectedOptions","timer","setTimer","isSubmitted","setIsSubmitted","score","setScore","showModal","setShowModal","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","timerRef","fetchQuizCards","response","post","eventID","data","rData","items","error","console","startTimer","current","clearInterval","setInterval","prev","setTimeout","handleSubmitQuiz","handleStartQuiz","quizCardId","addInfo","quiz_card_id","id","handleOptionSelect","questionId","option","log","newScore","correctCount","incorrectCount","forEach","question","quiz_id","correct_answer","user","setUser","user_id","username","name","email","address","picture","fetchUserData","_response$data$rData","currentUser","JSON","parse","localStorage","getItem","userEmail","userData","foundUser","find","renderQuizQuestions","quizCard","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","no_of_questions","Math","floor","map","q","option1","option2","option3","option4","index","onClick","isOpen","onClose","userId","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/NCS/Desktop/22 july/frontend/QuizCraze16/src/components/Quiz/QuizList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport '../../styles/quizList.css';\r\nimport Modal from './Modal.js';\r\n\r\nconst QuizList = () => {\r\n  const [quizzes, setQuizzes] = useState([]);\r\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [timer, setTimer] = useState(5); // 120 seconds = 2 minutes\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizCards = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5164/viewCardQuiz', { eventID: \"1001\" });\r\n        const data = response.data;\r\n        if (data && data.rData && data.rData.items) {\r\n          setQuizzes(data.rData.items);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching quiz cards:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuizCards();\r\n  }, []);\r\n\r\n  const startTimer = () => {\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    setTimer(5); // Set initial timer value (in seconds)\r\n    timerRef.current = setInterval(() => {\r\n      setTimer(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setTimeout(() => {\r\n            setShowModal(true); // Show modal when timer ends\r\n          }, 500); // Adjust delay if needed\r\n          handleSubmitQuiz(); // Optionally handle quiz submission\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleStartQuiz = async (quizCardId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5164/viewQuizByQuizCardId`, {\r\n        eventID: \"1001\",\r\n        addInfo: { quiz_card_id: quizCardId }\r\n      });\r\n\r\n      const data = response.data;\r\n      if (data && data.rData && data.rData.items) {\r\n        setSelectedQuiz({\r\n          id: quizCardId,\r\n          quizzes: data.rData.items\r\n        });\r\n        setSelectedOptions({});\r\n        setIsSubmitted(false); // Reset submission state\r\n        setScore(0); // Reset score\r\n        setShowModal(false); // Hide modal if open\r\n        setCorrectAnswers(0);\r\n        setIncorrectAnswers(0);\r\n        startTimer(); // Start the timer when starting a new quiz\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching quizzes:', error);\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = (questionId, option) => {\r\n    setSelectedOptions({\r\n      ...selectedOptions,\r\n      [questionId]: option,\r\n    });\r\n    console.log(`Selected option for question ${questionId}: ${option}`);\r\n  };\r\n\r\n  const handleSubmitQuiz = () => {\r\n    if (selectedQuiz) {\r\n      let newScore = 0;\r\n      let correctCount = 0;\r\n      let incorrectCount = 0;\r\n      selectedQuiz.quizzes.forEach(question => {\r\n        if (selectedOptions[question.quiz_id] === question.correct_answer) {\r\n          newScore += 1;\r\n          correctCount += 1;\r\n        } else {\r\n          incorrectCount += 1;\r\n        }\r\n      });\r\n      setScore(newScore);\r\n      setCorrectAnswers(correctCount);\r\n      setIncorrectAnswers(incorrectCount);\r\n      setIsSubmitted(true);\r\n      setShowModal(true); // Show modal when quiz is submitted\r\n      clearInterval(timerRef.current); // Stop the timer\r\n    }\r\n  };\r\n\r\n  const [user, setUser] = useState({\r\n    user_id: '',\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    address: '',\r\n    picture: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      const userEmail = currentUser?.email;\r\n\r\n      const response = await axios.post('http://localhost:5164/viewUsers', {\r\n        eventID: \"1001\",\r\n        addInfo: { email: userEmail }\r\n      });\r\n\r\n      const userData = response.data.rData?.items || [];\r\n      const foundUser = userData.find(user => user.email === userEmail);\r\n\r\n      if (foundUser) {\r\n        setUser(foundUser);\r\n      } else {\r\n        console.error('User data does not match logged-in user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  const renderQuizQuestions = (quizCard) => (\r\n    <div className=\"quiz-details\">\r\n      <h3>{quizCard.title}</h3>\r\n      <p>{quizCard.no_of_questions}</p>\r\n      <div className=\"timer\">Timer: {Math.floor(timer / 60)}:{timer % 60 < 10 ? `0${timer % 60}` : timer % 60} minutes</div>\r\n      <ul>\r\n        {quizCard.quizzes.map(q => (\r\n          <li key={q.quiz_id}>\r\n            <p>{q.question}</p>\r\n            <ul>\r\n              {[q.option1, q.option2, q.option3, q.option4].map((option, index) => {\r\n                let className = '';\r\n                if (isSubmitted) {\r\n                  if (option === q.correct_answer) {\r\n                    className = 'correct-option';\r\n                  } else if (selectedOptions[q.quiz_id] === option) {\r\n                    className = 'incorrect-option';\r\n                  }\r\n                } else if (selectedOptions[q.quiz_id] === option) {\r\n                  className = 'selected-option';\r\n                }\r\n                return (\r\n                  <li\r\n                    key={index}\r\n                    className={className}\r\n                    onClick={() => handleOptionSelect(q.quiz_id, option)}\r\n                  >\r\n                    {option}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleSubmitQuiz}>Submit</button>\r\n      <button onClick={() => {\r\n        clearInterval(timerRef.current); // Stop the timer when going back\r\n        setSelectedQuiz(null);\r\n      }}>Back to Quizzes</button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"quiz-list\">\r\n      <h2>Available Quizzes</h2>\r\n      {!selectedQuiz ? (\r\n        <ul>\r\n          {quizzes.map(quizCard => (\r\n            <li key={quizCard.quiz_card_id}>\r\n              <h3>{quizCard.title}</h3>\r\n              <p>Total Questions : {quizCard.no_of_questions}</p>\r\n              <button onClick={() => handleStartQuiz(quizCard.quiz_card_id)}>Start Quiz</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        renderQuizQuestions(selectedQuiz)\r\n      )}\r\n  \r\n      <Modal\r\n        isOpen={showModal}\r\n        onClose={() => setShowModal(false)}\r\n        correctAnswers={correctAnswers}\r\n        incorrectAnswers={incorrectAnswers}\r\n        score={score}\r\n        userId={user.user_id}\r\n        quizCardId={selectedQuiz ? selectedQuiz.id : null}\r\n        handleSubmit={handleSubmitQuiz} // Pass handleSubmitQuiz to Modal\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}