{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashna.alnisa\\\\Desktop\\\\Quiz Craze 24\\\\frontend\\\\QuizCraze16\\\\src\\\\components\\\\Admin\\\\QuizManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../styles/quizManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizManagement = () => {\n  _s();\n  const [quizCards, setQuizCards] = useState([]);\n  const [selectedQuizCard, setSelectedQuizCard] = useState(null);\n  const [quizCardTitle, setQuizCardTitle] = useState('');\n  const [quizCardNoOfQuestions, setQuizCardNoOfQuestions] = useState('');\n  const [originalQuizzes, setOriginalQuizzes] = useState([]);\n  useEffect(() => {\n    fetchQuizCards();\n  }, []);\n  const fetchQuizCards = async () => {\n    try {\n      const response = await axios.post('http://localhost:5164/viewCardQuiz', {\n        eventID: \"1001\"\n      });\n      const data = response.data;\n      if (data && data.rData && data.rData.items) {\n        setQuizCards(data.rData.items);\n      }\n    } catch (error) {\n      console.error('Error fetching quiz cards:', error);\n    }\n  };\n  const handleDeleteQuizCard = async quizCardId => {\n    try {\n      const confirmDelete = window.confirm('Are you sure you want to delete this quiz card?');\n      if (confirmDelete) {\n        const response = await axios.post('http://localhost:5164/deleteCardQuiz', {\n          eventID: \"1001\",\n          addInfo: {\n            quiz_card_id: quizCardId\n          }\n        });\n        const data = response.data;\n        if (data && data.rMessage === \"Successful\") {\n          setQuizCards(quizCards.filter(card => card.quiz_card_id !== quizCardId));\n          setSelectedQuizCard(null); // Clear selected quiz card after deletion\n          showSuccessMessage('Quiz card deleted successfully.');\n        } else {\n          console.error('Failed to delete quiz card:', data);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting quiz card:', error);\n    }\n  };\n  const handleEditQuizCard = async quizCardId => {\n    try {\n      const response = await axios.post('http://localhost:5164/viewQuizByQuizCardId', {\n        eventID: \"1001\",\n        addInfo: {\n          quiz_card_id: quizCardId\n        }\n      });\n      const data = response.data;\n      if (data && data.rData && data.rData.items) {\n        setSelectedQuizCard({\n          id: quizCardId,\n          quizzes: data.rData.items\n        });\n        setOriginalQuizzes(data.rData.items); // Save original quizzes for cancel\n        // Populate quiz card title and number of questions for editing\n        const selectedCard = quizCards.find(card => card.quiz_card_id === quizCardId);\n        if (selectedCard) {\n          setQuizCardTitle(selectedCard.title);\n          setQuizCardNoOfQuestions(selectedCard.no_of_questions);\n        }\n      } else {\n        console.error('Failed to fetch quiz card details for editing');\n      }\n    } catch (error) {\n      console.error('Error editing quiz card:', error);\n    }\n  };\n  const handleCancelEdit = () => {\n    setSelectedQuizCard(null);\n    setQuizCardTitle('');\n    setQuizCardNoOfQuestions('');\n  };\n  const handleCancelQuizzes = () => {\n    setSelectedQuizCard({\n      ...selectedQuizCard,\n      quizzes: [...originalQuizzes] // Restore original quizzes\n    });\n    setQuizCardTitle('');\n    setQuizCardNoOfQuestions('');\n  };\n  const handleSaveChanges = async () => {\n    try {\n      const response = await axios.post('http://localhost:5164/updateCardQuiz', {\n        eventID: \"1001\",\n        addInfo: {\n          quiz_card_id: selectedQuizCard.id,\n          title: quizCardTitle,\n          no_of_questions: quizCardNoOfQuestions\n        }\n      });\n      const data = response.data;\n      if (data && data.rMessage === \"Successful\") {\n        setQuizCards(quizCards.map(card => {\n          if (card.quiz_card_id === selectedQuizCard.id) {\n            return {\n              ...card,\n              title: quizCardTitle,\n              no_of_questions: quizCardNoOfQuestions\n            };\n          }\n          return card;\n        }));\n        setSelectedQuizCard(null);\n        setQuizCardTitle('');\n        setQuizCardNoOfQuestions('');\n      } else {\n        console.error('Failed to update quiz card:', data);\n      }\n    } catch (error) {\n      console.error('Error updating quiz card:', error);\n    }\n  };\n  const handleSaveQuiz = async quizId => {\n    try {\n      const quizToUpdate = selectedQuizCard.quizzes.find(quiz => quiz.quiz_id === quizId);\n      if (!quizToUpdate) {\n        console.error(`Quiz with ID ${quizId} not found in selected quiz card.`);\n        return;\n      }\n      const response = await axios.post('http://localhost:5164/updateQuiz', {\n        eventID: \"1001\",\n        addInfo: {\n          quiz_id: quizToUpdate.quiz_id,\n          quiz_card_id: selectedQuizCard.id,\n          question: quizToUpdate.question,\n          option1: quizToUpdate.option1,\n          option2: quizToUpdate.option2,\n          option3: quizToUpdate.option3,\n          option4: quizToUpdate.option4,\n          correct_answer: quizToUpdate.correct_answer\n        }\n      });\n      const data = response.data;\n      if (data && data.rMessage === \"Successful\") {\n        // Update state or perform necessary actions\n      } else {\n        console.error(`Failed to update quiz with ID ${quizId}:`, data);\n      }\n    } catch (error) {\n      console.error(`Error updating quiz with ID ${quizId}:`, error);\n    }\n  };\n  const handleCancelQuiz = quizId => {\n    // Implement cancellation logic for a specific quiz if needed\n  };\n  const handleOptionChange = (quizId, option) => {\n    setSelectedQuizCard({\n      ...selectedQuizCard,\n      quizzes: selectedQuizCard.quizzes.map(quiz => {\n        if (quiz.quiz_id === quizId) {\n          return {\n            ...quiz,\n            [option.type]: option.value\n          };\n        }\n        return quiz;\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-cards\",\n      children: quizCards.map(quizCard => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: quizCard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Questions: \", quizCard.no_of_questions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditQuizCard(quizCard.quiz_card_id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteQuizCard(quizCard.quiz_card_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), selectedQuizCard && selectedQuizCard.id === quizCard.quiz_card_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-quiz-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: quizCardTitle,\n            onChange: e => setQuizCardTitle(e.target.value),\n            placeholder: \"Quiz Card Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quizCardNoOfQuestions,\n            onChange: e => setQuizCardNoOfQuestions(e.target.value),\n            placeholder: \"Number of Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveChanges,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Edit Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), selectedQuizCard.quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Question: \", quiz.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: quiz.option1,\n              onChange: e => handleOptionChange(quiz.quiz_id, {\n                type: 'option1',\n                value: e.target.value\n              }),\n              placeholder: \"Option 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: quiz.option2,\n              onChange: e => handleOptionChange(quiz.quiz_id, {\n                type: 'option2',\n                value: e.target.value\n              }),\n              placeholder: \"Option 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: quiz.option3,\n              onChange: e => handleOptionChange(quiz.quiz_id, {\n                type: 'option3',\n                value: e.target.value\n              }),\n              placeholder: \"Option 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: quiz.option4,\n              onChange: e => handleOptionChange(quiz.quiz_id, {\n                type: 'option4',\n                value: e.target.value\n              }),\n              placeholder: \"Option 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: quiz.correct_answer,\n              onChange: e => handleOptionChange(quiz.quiz_id, {\n                type: 'correct_answer',\n                value: e.target.value\n              }),\n              placeholder: \"Correct Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSaveQuiz(quiz.quiz_id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCancelQuiz(quiz.quiz_id),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this)]\n          }, quiz.quiz_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelQuizzes,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)]\n      }, quizCard.quiz_card_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizManagement, \"nBGf3NZpR8iwJMFzq1F3xsdr7YU=\");\n_c = QuizManagement;\nexport default QuizManagement;\nvar _c;\n$RefreshReg$(_c, \"QuizManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","QuizManagement","_s","quizCards","setQuizCards","selectedQuizCard","setSelectedQuizCard","quizCardTitle","setQuizCardTitle","quizCardNoOfQuestions","setQuizCardNoOfQuestions","originalQuizzes","setOriginalQuizzes","fetchQuizCards","response","post","eventID","data","rData","items","error","console","handleDeleteQuizCard","quizCardId","confirmDelete","window","confirm","addInfo","quiz_card_id","rMessage","filter","card","showSuccessMessage","handleEditQuizCard","id","quizzes","selectedCard","find","title","no_of_questions","handleCancelEdit","handleCancelQuizzes","handleSaveChanges","map","handleSaveQuiz","quizId","quizToUpdate","quiz","quiz_id","question","option1","option2","option3","option4","correct_answer","handleCancelQuiz","handleOptionChange","option","type","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","quizCard","onClick","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ashna.alnisa/Desktop/Quiz Craze 24/frontend/QuizCraze16/src/components/Admin/QuizManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../../styles/quizManagement.css';\r\n\r\nconst QuizManagement = () => {\r\n  const [quizCards, setQuizCards] = useState([]);\r\n  const [selectedQuizCard, setSelectedQuizCard] = useState(null);\r\n  const [quizCardTitle, setQuizCardTitle] = useState('');\r\n  const [quizCardNoOfQuestions, setQuizCardNoOfQuestions] = useState('');\r\n  const [originalQuizzes, setOriginalQuizzes] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchQuizCards();\r\n  }, []);\r\n\r\n  const fetchQuizCards = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5164/viewCardQuiz', { eventID: \"1001\" });\r\n      const data = response.data;\r\n      if (data && data.rData && data.rData.items) {\r\n        setQuizCards(data.rData.items);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching quiz cards:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuizCard = async (quizCardId) => {\r\n    try {\r\n      const confirmDelete = window.confirm('Are you sure you want to delete this quiz card?');\r\n      if (confirmDelete) {\r\n        const response = await axios.post('http://localhost:5164/deleteCardQuiz', {\r\n          eventID: \"1001\",\r\n          addInfo: { quiz_card_id: quizCardId }\r\n        });\r\n        const data = response.data;\r\n        if (data && data.rMessage === \"Successful\") {\r\n          setQuizCards(quizCards.filter(card => card.quiz_card_id !== quizCardId));\r\n          setSelectedQuizCard(null); // Clear selected quiz card after deletion\r\n          showSuccessMessage('Quiz card deleted successfully.');\r\n        } else {\r\n          console.error('Failed to delete quiz card:', data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting quiz card:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleEditQuizCard = async (quizCardId) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5164/viewQuizByQuizCardId', {\r\n        eventID: \"1001\",\r\n        addInfo: { quiz_card_id: quizCardId }\r\n      });\r\n      const data = response.data;\r\n      if (data && data.rData && data.rData.items) {\r\n        setSelectedQuizCard({\r\n          id: quizCardId,\r\n          quizzes: data.rData.items\r\n        });\r\n        setOriginalQuizzes(data.rData.items); // Save original quizzes for cancel\r\n        // Populate quiz card title and number of questions for editing\r\n        const selectedCard = quizCards.find(card => card.quiz_card_id === quizCardId);\r\n        if (selectedCard) {\r\n          setQuizCardTitle(selectedCard.title);\r\n          setQuizCardNoOfQuestions(selectedCard.no_of_questions);\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch quiz card details for editing');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error editing quiz card:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setSelectedQuizCard(null);\r\n    setQuizCardTitle('');\r\n    setQuizCardNoOfQuestions('');\r\n  };\r\n\r\n  const handleCancelQuizzes = () => {\r\n    setSelectedQuizCard({\r\n      ...selectedQuizCard,\r\n      quizzes: [...originalQuizzes] // Restore original quizzes\r\n    });\r\n    setQuizCardTitle('');\r\n    setQuizCardNoOfQuestions('');\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5164/updateCardQuiz', {\r\n        eventID: \"1001\",\r\n        addInfo: {\r\n          quiz_card_id: selectedQuizCard.id,\r\n          title: quizCardTitle,\r\n          no_of_questions: quizCardNoOfQuestions\r\n        }\r\n      });\r\n      const data = response.data;\r\n      if (data && data.rMessage === \"Successful\") {\r\n        setQuizCards(quizCards.map(card => {\r\n          if (card.quiz_card_id === selectedQuizCard.id) {\r\n            return {\r\n              ...card,\r\n              title: quizCardTitle,\r\n              no_of_questions: quizCardNoOfQuestions\r\n            };\r\n          }\r\n          return card;\r\n        }));\r\n        setSelectedQuizCard(null);\r\n        setQuizCardTitle('');\r\n        setQuizCardNoOfQuestions('');\r\n      } else {\r\n        console.error('Failed to update quiz card:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating quiz card:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveQuiz = async (quizId) => {\r\n    try {\r\n      const quizToUpdate = selectedQuizCard.quizzes.find(quiz => quiz.quiz_id === quizId);\r\n      if (!quizToUpdate) {\r\n        console.error(`Quiz with ID ${quizId} not found in selected quiz card.`);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('http://localhost:5164/updateQuiz', {\r\n        eventID: \"1001\",\r\n        addInfo: {\r\n          quiz_id: quizToUpdate.quiz_id,\r\n          quiz_card_id: selectedQuizCard.id,\r\n          question: quizToUpdate.question,\r\n          option1: quizToUpdate.option1,\r\n          option2: quizToUpdate.option2,\r\n          option3: quizToUpdate.option3,\r\n          option4: quizToUpdate.option4,\r\n          correct_answer: quizToUpdate.correct_answer\r\n        }\r\n      });\r\n\r\n      const data = response.data;\r\n      if (data && data.rMessage === \"Successful\") {\r\n        // Update state or perform necessary actions\r\n      } else {\r\n        console.error(`Failed to update quiz with ID ${quizId}:`, data);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error updating quiz with ID ${quizId}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleCancelQuiz = (quizId) => {\r\n    // Implement cancellation logic for a specific quiz if needed\r\n  };\r\n\r\n  const handleOptionChange = (quizId, option) => {\r\n    setSelectedQuizCard({\r\n      ...selectedQuizCard,\r\n      quizzes: selectedQuizCard.quizzes.map(quiz => {\r\n        if (quiz.quiz_id === quizId) {\r\n          return {\r\n            ...quiz,\r\n            [option.type]: option.value\r\n          };\r\n        }\r\n        return quiz;\r\n      })\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-management\">\r\n      <h2>Quiz Management</h2>\r\n      <div className=\"quiz-cards\">\r\n        {quizCards.map(quizCard => (\r\n          <div key={quizCard.quiz_card_id} className=\"quiz-card\">\r\n            <h3>{quizCard.title}</h3>\r\n            <p>Total Questions: {quizCard.no_of_questions}</p>\r\n            <div className=\"card-actions\">\r\n              <button onClick={() => handleEditQuizCard(quizCard.quiz_card_id)}>Edit</button>\r\n              <button onClick={() => handleDeleteQuizCard(quizCard.quiz_card_id)}>Delete</button>\r\n            </div>\r\n            {selectedQuizCard && selectedQuizCard.id === quizCard.quiz_card_id && (\r\n              <div className=\"edit-quiz-card\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={quizCardTitle}\r\n                  onChange={(e) => setQuizCardTitle(e.target.value)}\r\n                  placeholder=\"Quiz Card Title\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  value={quizCardNoOfQuestions}\r\n                  onChange={(e) => setQuizCardNoOfQuestions(e.target.value)}\r\n                  placeholder=\"Number of Questions\"\r\n                />\r\n                <button onClick={handleSaveChanges}>Save Changes</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n                <h4>Edit Questions:</h4>\r\n                {selectedQuizCard.quizzes.map(quiz => (\r\n                  <div key={quiz.quiz_id} className=\"edit-question\">\r\n                    <p>Question: {quiz.question}</p>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={quiz.option1}\r\n                      onChange={(e) => handleOptionChange(quiz.quiz_id, { type: 'option1', value: e.target.value })}\r\n                      placeholder=\"Option 1\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={quiz.option2}\r\n                      onChange={(e) => handleOptionChange(quiz.quiz_id, { type: 'option2', value: e.target.value })}\r\n                      placeholder=\"Option 2\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={quiz.option3}\r\n                      onChange={(e) => handleOptionChange(quiz.quiz_id, { type: 'option3', value: e.target.value })}\r\n                      placeholder=\"Option 3\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={quiz.option4}\r\n                      onChange={(e) => handleOptionChange(quiz.quiz_id, { type: 'option4', value: e.target.value })}\r\n                      placeholder=\"Option 4\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={quiz.correct_answer}\r\n                      onChange={(e) => handleOptionChange(quiz.quiz_id, { type: 'correct_answer', value: e.target.value })}\r\n                      placeholder=\"Correct Answer\"\r\n                    />\r\n                    <button onClick={() => handleSaveQuiz(quiz.quiz_id)}>Save</button>\r\n                    <button onClick={() => handleCancelQuiz(quiz.quiz_id)}>Cancel</button>\r\n                  </div>\r\n                ))}\r\n                {/* <button onClick={handleSaveQuizzes}>Save Quizzes</button> */}\r\n                <button onClick={handleCancelQuizzes}>Cancel</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}